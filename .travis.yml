
# BASH UNITY TESTERS
# http://ssb.stsci.edu/testing/shunit2/shunit2.html
# https://github.com/sstephenson/bats
# Syntax: shellcheck | bashate
# Function: shunit2 | bats 

dist: trusty
sudo: required

language: bash

before_install:
  - sudo apt-add-repository "deb http://archive.ubuntu.com/ubuntu trusty-backports main restricted universe multiverse"
  - sudo apt-get -qq update
  - sudo apt-get -t trusty-backports install shellcheck
  - sudo apt-get -t trusty-backports install python-bashate
  - sudo apt-get -t trusty-backports install shunit2
  - sudo apt-get -t trusty-backports install bats
  # - sudo travis/lxd/before_install.sh

install:

before_script:

script:
  # - sudo travis/lxd/script.sh
  - ./travis/tests/shellcheck-tests.sh
  - ./travis/tests/bashate-tests.sh
  # - ./travis/tests/functional-tests.sh
  - ./trevis/tests/shunit2-tests.sh
  - bats --tap ./travis/tests/bats-tests.bats
  - bats ./travis/tests/bats-tests.bats


# Como funciona isso? Precisa? Tinha no exemplo de integração do LXD
# notifications:
#   pushover:
#     api_key:
#       secure: fDVX79tWv/qRBF4gTiEaCJ2Pnvm8WCmmUjtKIEjonoMQxCsOZXgncRSOcNPTT1XLyML9EAC/BB7H0CSjKiJcjDKyZIJKhblUJmpdiw7cqIGMNKirrDwD/9RWORG7jIfI9YoeLJkzXZQ+pP1+LoSjLtaYf1ff6wB4aNS+2AQhzKbwzXWVbQ9rNv9LkryT6mUU3Cfd6avatWHEr6P9bSF7UdZst+r21rB5biNaKHk0PQpX5Q5TzEOGpz47tSZbE4Hdcu3L0vNPOPC6c4KBRCmWfBNjczZbZQ3Ud8uTuEuaGBZGGnAdn+Ul8UmTsEKC9vXyGx9u5spjr1ViMtuHw8+3HdMBg1TVbJOUkAx3kmhQTDtikVCMSCvCS74CSywtOtjXtyDkrXeRJnESbXClCR/mH+SNc2nLtnAl232U186letJmcHv3AiMS5nwTIrVvbQCXq9pZUKrJpSCgNBbekKJCxAj7sOiplc6FKCypBLkLrbx2cf974NqtFmdjwAK+bKVQlCMl8a51gMILUzehYPwNrjSVnb28Uo35Pgbk+rBaoBBV/2NY1rJRJsZPgonzu72g5Q1GrLZZc0WWUKtYhEu5Q9qrpiaNZPcGqU1qSbCQWd8Dtw2w7hC0ErEnws8WtHGp6/aE2RqlcGOzzNoFW6aFA2MuRBp0MQiY8OrBH6DYM+o=
#     users:
#       secure: RT5Rg8K8gbJl11UaJoI8H20/JL221HHNKVnekka98B5iMKrh1uAhgfB4LIJx6XN+sPU/+23/K9K8X54CcUPverO2lTCirWosktsViYUmlxufWxH2Yfw4WFg1S4YLB7EcU398Q9ruZN2SdV4pituksIvOCTxlj1NqzKYyryIUPWEQEUPEGwgpw0D18h6A7z1Ptuohxx5jJJfFtjXD4lpt7l9az7iLIxx/Onfl7WEhCfYRCAWyE1rA3VCE5FsPIeQLIWDRVcIYpbm2AOqZ0J613mHutu0kxmG13H+NfohcSqcagVYyYIqKOW2oaV0/RzkFZ41QogIIkXTV09fBHZeaqYDGv1cn1uR7RE+WWsm5T7QzVkFq8T3HTU2SpN2fso9bHMpDn8tkTNPhnPVKlmRXMnylZwp11e25s9EiK4uz92AmUo3WY14JmVMFf4PH8EBzS/YMSK4604pMDSKZammCmx9HEHGqRvlj3+xsWhnbwOIi5ETZQlN20UJlRdphcGNds7VTUk33nU3CpTW60QKsgtT58ak7Omo4PPDkX76Nhu3RvyYsB/clSpgUXZvdkaddNxybfKKiokkhXJnBN5xSRzpgQBL9W2j4md3LEnM+rkKMn1on1yfV8DR3ftj3hCZwv+CgkSV/rnXmj1D7Azy6na08F54jSAipsYii2DTa4dE=



#https://docs.travis-ci.com/user/deployment/custom/
#after_success:
  #- eval "$(ssh-agent -s)" #start the ssh agent
  #- chmod 600 .travis/deploy_key.pem # this key should have push access
  #- ssh-add .travis/deploy_key.pem
  #- git remote add deploy DEPLOY_REPO_URI_GOES_HERE
  #- git push deploy

# after_failure:
  # - echo "TODO after_failure"

# after_script:
  # - echo "TODO after_script"

# here's a build step block
# after_script: 
  # - echo "We can put normal shell commands here"
  # - echo "more shell commands here"
 
